41 2 0
38 1
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 133 40 0 \NUL
O'Boyle, Devan
22 8 96 75 72 0 \NUL
doboyle
22 64 272 289 248 0 \NUL
Part A Output                            
8 216 184 265 135 1 0
8 280 184 329 135 1 0
8 352 184 401 135 1 0
11 168 424 195 326 0 1
20 264 208 323 189 0
in_3
20 336 208 395 189 0
in_2
20 408 208 467 189 0
in_1
8 424 184 473 135 1 0
20 480 208 539 189 0
in_0
19 80 312 139 293 0
a_3
19 64 336 123 317 0
a_2
19 48 360 107 341 0
a_1
19 32 384 91 365 0
a_0
22 12 456 372 432 0 \NUL
Displays a hexadecimal number based on the
22 12 480 405 456 0 \NUL
corresponding binary input given by the switches
22 413 427 719 403 0 \NUL
Output only depends on inputs 1 and 0
7 360 664 409 615 0 1
7 360 704 409 655 0 1
19 272 592 331 573 0
c_2
19 272 632 331 613 0
c_1
19 272 672 331 653 0
c_0
22 416 688 480 668 0 \NUL
SOP/POS
22 416 648 492 628 0 \NUL
NAND Only
22 416 608 484 588 0 \NUL
NOR Only
22 413 451 754 427 0 \NUL
if input in_0 is on then output b_1 is also on
22 123 734 519 710 0 \NUL
The lights turn on only when all of the inputs are 0
22 123 759 457 735 0 \NUL
or when only two of the three inputs are 1
22 280 32 653 12 0 \NUL
You are only permitted to modify or add text to this page.
22 280 56 605 36 0 \NUL
Your circuit must use senders and/or receivers to
22 280 80 538 60 0 \NUL
interface with these inputs and outputs.
7 472 360 521 311 0 1
7 544 360 593 311 0 1
7 616 360 665 311 0 1
19 416 392 475 373 0
b_2
19 488 392 547 373 0
b_1
19 560 392 619 373 0
b_0
7 360 624 409 575 0 1
22 64 136 616 116 0 \NUL
Input                                                                                                                                 
22 448 272 650 252 0 \NUL
Part B Output                            
22 272 552 473 532 0 \NUL
Part C Output                            
22 413 474 737 450 0 \NUL
 if one of the two inputs: in_0, in_1 are on
22 413 496 682 472 0 \NUL
but not both then output b_2 is on
22 413 519 604 495 0 \NUL
output b_0 is always off
22 123 784 771 760 0 \NUL
otherwise if there is only one input that is 1, or if they are all 1, the lights will be off
22 12 504 283 480 0 \NUL
e.g. if the input is 0001, output is 1,
22 12 527 247 503 0 \NUL
if the input is 0011, output is 3
1 481 198 470 159
1 398 159 409 198
1 326 159 337 198
1 262 159 265 198
1 136 302 169 390
1 120 326 169 396
1 104 350 169 402
1 88 374 169 408
1 361 639 328 622
1 361 679 328 662
1 473 335 472 382
1 545 335 544 382
1 617 335 616 382
1 361 599 328 582
38 2
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 133 40 0 \NUL
O'Boyle, Devan
22 8 96 75 72 0 \NUL
doboyle
22 24 600 390 580 0 \NUL
these are only present so circuit simulates without error
22 24 624 291 604 0 \NUL
remove these once logic is implemented
22 32 184 262 164 0 \NUL
placeholder senders and receivers
22 209 350 645 330 0 \NUL
We suggest building each part on a new page using the -/+ buttons
22 10 131 376 107 0 \NUL
See next pages for work on parts A through C
38 3
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 133 40 0 \NUL
O'Boyle, Devan
22 8 96 75 72 0 \NUL
doboyle
22 9 126 63 102 0 \NUL
Part A
19 32 216 91 197 0
in_3
19 32 240 91 221 0
in_2
19 32 264 91 245 0
in_1
19 32 288 91 269 0
in_0
20 185 216 244 197 0
a_3
20 185 240 244 221 0
a_2
20 185 264 244 245 0
a_1
20 185 288 244 269 0
a_0
22 23 159 483 135 0 \NUL
Here, I simply had to connect the receivers to the senders
22 23 182 386 158 0 \NUL
to make the 7 segment LED display functional
1 186 206 88 206
1 186 230 88 230
1 186 254 88 254
1 186 278 88 278
38 4
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 133 40 0 \NUL
O'Boyle, Devan
22 8 96 75 72 0 \NUL
doboyle
22 11 127 65 103 0 \NUL
Part B
20 358 234 417 215 0
b_1
20 358 298 417 279 0
b_0
20 356 178 415 159 0
b_2
19 61 192 120 173 0
in_1
19 62 164 121 145 0
in_0
35 181 193 230 144 0 0
19 60 298 119 279 0
in_1
19 60 270 119 251 0
in_0
3 175 299 224 250 0 1
19 59 357 118 338 0
in_1
19 60 329 119 310 0
in_0
3 176 358 225 309 0 0
3 261 313 310 264 0 0
19 60 234 119 215 0
in_0
22 168 60 782 36 0 \NUL
This circuit can be greatly simplified as the output only relies on in_0 and in_1,
22 168 82 533 58 0 \NUL
despite the truth table including in_2 and in_3.
22 41 396 568 372 0 \NUL
Made sure to include the output b_0 as it should remain functional,
22 41 419 520 395 0 \NUL
but be kept off for all of the different inputs in the truth table
1 182 154 118 154
1 182 182 117 182
1 176 260 116 260
1 176 288 116 288
1 177 319 116 319
1 177 347 115 347
1 262 302 222 333
1 262 274 221 274
1 359 288 307 288
1 357 168 227 168
1 359 224 116 224
38 5
22 8 32 48 12 0 \NUL
Lab 1
22 8 64 133 40 0 \NUL
O'Boyle, Devan
22 8 96 75 72 0 \NUL
doboyle
20 508 358 567 339 0
c_0
19 69 212 128 193 0
in_2
19 69 248 128 229 0
in_1
19 68 283 127 264 0
in_0
22 8 122 62 98 0 \NUL
Part C
19 68 366 127 347 0
in_1
19 66 390 125 371 0
in_0
19 67 343 126 324 0
in_2
22 11 152 210 128 0 \NUL
Output c_0 (SOP or POS)
3 263 263 312 214 1 0
19 67 459 126 440 0
in_2
19 67 488 126 469 0
in_1
19 68 518 127 499 0
in_0
5 179 503 228 454 0
19 68 552 127 533 0
in_2
19 69 580 128 561 0
in_1
19 69 614 128 595 0
in_0
5 181 629 230 580 0
5 183 358 232 309 0
3 271 381 320 332 1 0
3 271 503 320 454 1 0
3 259 595 308 546 1 0
4 414 373 463 324 2 0
5 180 298 229 249 0
5 182 263 231 214 0
5 182 227 231 178 0
22 236 52 709 28 0 \NUL
Here I used sum of products to implement the truth table by
22 236 76 732 52 0 \NUL
taking each combination of inputs that results in an output of 1
22 236 99 721 75 0 \NUL
and put them in their own separate branches where they are
22 236 122 774 98 0 \NUL
connected by ANDs, and then I joined them all together using an OR
1 123 478 180 478
1 125 604 182 604
1 123 333 184 333
1 124 356 272 356
1 229 333 272 342
1 122 380 272 370
1 123 449 272 464
1 225 478 272 478
1 124 508 272 492
1 124 542 260 556
1 125 570 260 570
1 227 604 260 584
1 309 238 415 334
1 317 356 415 343
1 317 478 415 353
1 305 570 415 362
1 460 348 509 348
1 124 273 181 273
1 226 273 264 252
1 125 238 183 238
1 228 238 264 238
1 125 202 183 202
1 228 202 264 224
38 6
22 8 32 55 8 0 \NUL
Lab 1
22 8 64 133 40 0 \NUL
O'Boyle, Devan
22 8 96 75 72 0 \NUL
doboyle
20 641 341 700 322 0
c_1
19 55 216 114 197 0
in_1
19 54 283 113 264 0
in_0
3 239 313 288 264 1 1
3 239 399 288 350 1 1
19 55 305 114 286 0
in_1
19 56 370 115 351 0
in_0
19 57 392 116 373 0
in_2
22 10 125 64 101 0 \NUL
Part C
22 9 154 161 130 0 \NUL
Output c_1 (NAND)
19 57 465 116 446 0
in_0
19 57 504 116 485 0
in_1
19 55 193 114 174 0
in_2
19 56 545 115 526 0
in_2
3 247 499 296 450 1 1
19 54 239 113 220 0
in_0
19 55 328 114 309 0
in_2
19 56 423 115 404 0
in_1
3 246 222 295 173 1 1
3 166 437 215 388 0 1
3 169 352 218 303 0 1
3 177 267 226 218 0 1
3 330 225 379 176 0 1
3 328 316 377 267 0 1
3 331 398 380 349 0 1
3 391 496 440 447 0 1
3 566 356 615 307 2 1
3 433 223 482 174 0 1
3 392 397 441 348 0 1
3 394 312 443 263 0 1
3 162 563 211 514 0 1
3 154 523 203 474 0 1
3 156 485 205 436 0 1
3 315 497 364 448 0 1
22 170 38 698 14 0 \NUL
I translated the previous circuit from output c_0 using only NANDs.
22 170 62 714 38 0 \NUL
For every AND, I used two NANDs consecutively, since reversing the
22 170 133 782 109 0 \NUL
For the OR, I used multiple NANDs and connected them all into a single NAND
22 170 157 747 133 0 \NUL
For the inverters I simply used a single input connected to a single NAND
22 170 85 627 61 0 \NUL
 input an even number of times results in the same output
22 170 109 396 85 0 \NUL
as if it wasn't reversed at all
1 167 426 112 413
1 167 398 112 413
1 240 388 212 412
1 240 374 113 382
1 240 360 112 360
1 240 274 110 273
1 240 288 111 295
1 170 313 111 318
1 170 341 111 318
1 240 302 215 327
1 178 256 110 229
1 178 228 110 229
1 247 211 223 242
1 247 197 111 206
1 247 183 111 183
1 331 186 292 197
1 331 214 292 197
1 329 277 285 288
1 329 305 285 288
1 332 359 285 374
1 332 387 285 374
1 567 345 437 471
1 434 184 376 200
1 434 212 376 200
1 567 317 479 198
1 393 358 377 373
1 393 386 377 373
1 395 273 374 291
1 395 301 374 291
1 567 336 438 372
1 567 326 440 287
1 642 331 612 331
1 157 446 113 455
1 157 474 113 455
1 155 484 113 494
1 155 512 113 494
1 163 524 112 535
1 163 552 112 535
1 248 460 202 460
1 248 474 200 498
1 248 488 208 538
1 316 458 293 474
1 316 486 293 474
1 392 457 361 472
1 392 485 361 472
38 7
22 8 32 55 8 0 \NUL
Lab 1
22 8 64 133 40 0 \NUL
O'Boyle, Devan
22 8 96 75 72 0 \NUL
doboyle
22 10 125 64 101 0 \NUL
Part C
22 9 154 150 130 0 \NUL
Output c_2 (NOR)
20 607 366 666 347 0
c_2
19 65 221 124 202 0
in_2
19 63 265 122 246 0
in_1
19 64 315 123 296 0
in_0
19 65 464 124 445 0
in_2
19 62 416 121 397 0
in_1
19 63 367 122 348 0
in_0
19 62 528 121 509 0
in_2
19 63 616 122 597 0
in_1
19 61 566 120 547 0
in_0
19 61 670 120 651 0
in_2
19 62 709 121 690 0
in_1
19 61 750 120 731 0
in_0
4 180 762 229 713 0 1
4 163 281 212 232 0 1
4 166 237 215 188 0 1
4 218 335 267 286 0 1
4 158 336 207 287 0 1
4 500 381 549 332 0 1
4 435 382 484 333 2 1
4 343 719 392 670 1 1
4 253 765 302 716 0 1
4 254 726 303 677 0 1
4 252 688 301 639 0 1
4 181 724 230 675 0 1
4 180 685 229 636 0 1
4 294 276 343 227 1 1
4 167 428 216 379 0 1
4 167 384 216 335 0 1
4 222 482 271 433 0 1
4 162 483 211 434 0 1
4 298 423 347 374 1 1
4 167 580 216 531 0 1
4 170 536 219 487 0 1
4 222 634 271 585 0 1
4 162 635 211 586 0 1
4 298 575 347 526 1 1
22 162 44 419 20 0 \NUL
For output c_2 I used only NORs
22 162 68 676 44 0 \NUL
Just like with NANDs, I made an inverter with using a single input
22 162 92 380 68 0 \NUL
 connected to a single NOR
22 162 116 796 92 0 \NUL
To make the OR, I simply inverted a NOR by connecting two NORs consecutively
22 162 140 649 116 0 \NUL
For the AND, I used multiple NORs connected to a single NOR
1 181 646 117 660
1 181 674 117 660
1 182 685 118 699
1 182 713 118 699
1 181 723 117 740
1 181 751 117 740
1 253 649 226 660
1 253 677 226 660
1 255 687 227 699
1 255 715 227 699
1 254 726 226 737
1 254 754 226 737
1 344 694 300 701
1 344 680 298 663
1 344 708 299 740
1 501 342 481 357
1 501 370 481 357
1 608 356 546 356
1 436 371 389 694
1 167 198 121 211
1 167 226 121 211
1 164 242 119 255
1 164 270 119 255
1 159 297 120 305
1 159 325 120 305
1 219 296 204 311
1 219 324 204 311
1 295 265 264 310
1 295 251 209 256
1 295 237 212 212
1 223 443 208 458
1 223 471 208 458
1 299 412 268 457
1 299 398 213 403
1 299 384 213 359
1 168 389 118 406
1 168 417 118 406
1 436 343 340 251
1 436 352 344 398
1 223 595 208 610
1 223 623 208 610
1 299 564 268 609
1 299 550 213 555
1 299 536 216 511
1 436 362 344 550
1 171 497 118 518
1 171 525 118 518
1 168 345 119 357
1 168 373 119 357
1 163 444 121 454
1 163 472 121 454
1 168 541 117 556
1 168 569 117 556
1 163 596 119 606
1 163 624 119 606
39 16777215
47 0
40 1 8 8
50 800 800
51 1 30
30
System
20
700
0
0
1
2
2
34
