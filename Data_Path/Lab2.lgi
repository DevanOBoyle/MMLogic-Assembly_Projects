41 2 0
38 1
8 252 396 301 347 1 0
8 318 396 367 347 1 0
22 258 348 424 328 0 \NUL
Read Register 1 Address
8 432 396 481 347 1 0
8 498 396 547 347 1 0
22 438 348 604 328 0 \NUL
Read Register 2 Address
20 720 414 779 395 0
wadr_0
20 654 414 713 395 0
wadr_1
8 606 396 655 347 1 0
8 672 396 721 347 1 0
22 612 348 767 328 0 \NUL
Write Register Address
20 480 414 539 395 0
adr2_1
20 546 414 605 395 0
adr2_0
20 366 414 425 395 0
adr1_0
20 300 414 359 395 0
adr1_1
19 174 108 233 89 0
reg0_2
19 162 84 221 65 0
reg0_3
19 198 156 257 137 0
reg0_0
19 186 132 245 113 0
reg0_1
11 258 108 285 10 0 1
22 144 36 255 16 0 \NUL
Register 0 Value
19 330 108 389 89 0
reg1_2
19 318 84 377 65 0
reg1_3
19 354 156 413 137 0
reg1_0
19 342 132 401 113 0
reg1_1
11 414 108 441 10 0 1
22 300 36 411 16 0 \NUL
Register 1 Value
19 486 108 545 89 0
reg2_2
19 474 84 533 65 0
reg2_3
19 510 156 569 137 0
reg2_0
19 498 132 557 113 0
reg2_1
11 570 108 597 10 0 1
22 456 36 567 16 0 \NUL
Register 2 Value
19 642 108 701 89 0
reg3_2
19 630 84 689 65 0
reg3_3
19 666 156 725 137 0
reg3_0
19 654 132 713 113 0
reg3_1
11 726 108 753 10 0 1
22 612 36 723 16 0 \NUL
Register 3 Value
19 648 264 707 245 0
alu_2
19 636 240 695 221 0
alu_3
19 672 312 731 293 0
alu_0
19 660 288 719 269 0
alu_1
11 732 264 759 166 0 1
22 648 192 724 172 0 \NUL
ALU Output
25 12 528 119 432
8 12 396 61 347 1 0
8 6 288 55 239 1 1
8 6 192 55 143 1 1
20 66 414 125 395 0
sel
20 60 210 119 191 0
clear
20 150 510 209 491 0
kpad_3
20 138 534 197 515 0
kpad_2
20 132 558 191 539 0
kpad_1
20 120 582 179 563 0
kpad_0
19 336 264 395 245 0
in1_2
19 324 240 383 221 0
in1_3
19 360 312 419 293 0
in1_0
19 348 288 407 269 0
in1_1
11 420 264 447 166 0 1
22 336 192 414 172 0 \NUL
ALU Input 1
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
19 174 264 233 245 0
kpad_2
19 162 240 221 221 0
kpad_3
19 198 312 257 293 0
kpad_0
19 186 288 245 269 0
kpad_1
11 258 264 285 166 0 1
22 150 192 249 172 0 \NUL
Keypad Output
22 12 144 117 124 0 \NUL
Clear Registers
22 18 324 100 304 0 \NUL
Store Select
20 60 294 119 275 0
update
22 12 240 121 220 0 \NUL
Update Register
19 492 264 551 245 0
in2_2
19 480 240 539 221 0
in2_3
19 516 312 575 293 0
in2_0
19 504 288 563 269 0
in2_1
11 576 264 603 166 0 1
22 492 192 570 172 0 \NUL
ALU Input 2
22 18 348 230 328 0 \NUL
0 = Keypad input, 1 = ALU result
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
22 228 450 478 430 0 \NUL
Select clear to initialize registers to 0.
22 228 474 557 454 0 \NUL
Select store select to choose which value to store.
22 228 498 508 478 0 \NUL
Choose read and write register addresses.
22 228 522 727 502 0 \NUL
Read addresses = reg sources of ALU inputs, Write address = reg to save to
22 228 546 480 526 0 \NUL
Press update to save value to register
22 228 594 668 574 0 \NUL
You are only permitted to modify the header comment on this page.
1 652 371 655 404
1 718 371 721 404
1 478 371 481 404
1 544 371 547 404
1 364 371 367 404
1 298 371 301 404
1 218 74 259 74
1 259 80 230 98
1 259 86 242 122
1 259 92 254 146
1 374 74 415 74
1 415 80 386 98
1 415 86 398 122
1 415 92 410 146
1 530 74 571 74
1 571 80 542 98
1 571 86 554 122
1 571 92 566 146
1 686 74 727 74
1 727 80 698 98
1 727 86 710 122
1 727 92 722 146
1 692 230 733 230
1 733 236 704 254
1 733 242 716 278
1 733 248 728 302
1 61 200 52 167
1 67 404 58 371
1 380 230 421 230
1 421 236 392 254
1 421 242 404 278
1 421 248 416 302
1 151 500 116 500
1 139 524 116 506
1 133 548 116 512
1 121 572 116 518
1 218 230 259 230
1 259 236 230 254
1 259 242 242 278
1 259 248 254 302
1 61 284 52 263
1 536 230 577 230
1 577 236 548 254
1 577 242 560 278
1 577 248 572 302
38 2
22 294 42 484 22 0 \NUL
Placeholder signal/recievers
22 18 480 388 460 0 \NUL
These are only present so circuit simulates without error
22 18 504 290 484 0 \NUL
Remove these once logic is implemented
22 18 528 266 508 0 \NUL
You are permitted to modify this page
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
38 3
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
19 220 137 279 118 0
update
19 218 436 277 417 0
wadr_1
19 217 408 276 389 0
wadr_0
19 218 324 277 305 0
wadr_0
19 219 351 278 332 0
wadr_1
19 218 269 277 250 0
wadr_1
19 221 241 280 222 0
wadr_0
19 219 194 278 175 0
wadr_1
19 219 167 278 148 0
wadr_0
5 291 182 340 133 0
5 313 209 362 160 0
19 220 220 279 201 0
update
19 218 303 277 284 0
update
19 219 382 278 363 0
update
20 465 151 524 132 0
updte0
20 470 241 529 222 0
updte1
20 476 405 535 386 0
updte3
20 473 325 532 306 0
updte2
5 297 284 346 235 0
5 303 339 352 290 0
3 392 166 441 117 1 0
3 388 256 437 207 1 0
3 384 420 433 371 1 0
3 388 340 437 291 1 0
22 12 125 101 105 0 \NUL
Update Logic
22 228 55 670 35 0 \NUL
This logic ensures that the update button will only update one of the
22 227 77 566 57 0 \NUL
corresponding registers based on the write address
1 275 157 292 157
1 275 184 314 184
1 274 259 298 259
1 274 314 304 314
1 393 127 276 127
1 393 141 337 157
1 393 155 359 184
1 466 141 438 141
1 389 217 276 210
1 389 231 277 231
1 389 245 343 259
1 471 231 434 231
1 389 301 274 293
1 389 315 349 314
1 389 329 275 341
1 474 315 434 315
1 385 381 275 372
1 385 395 273 398
1 385 409 274 426
1 477 395 430 395
38 4
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
15 319 66 368 17
15 327 204 376 155
19 258 88 317 69 0
updte0
15 322 331 371 282
15 330 469 379 420
24 360 112 409 40 1 1 1
15 319 66 368 17
19 229 136 288 117 0
clear
24 362 249 411 177 1 1 1
15 327 204 376 155
19 220 270 279 251 0
clear
24 367 377 416 305 1 1 1
15 322 331 371 282
19 213 403 272 384 0
clear
24 360 514 409 442 1 1 1
15 330 469 379 420
19 228 547 287 528 0
clear
22 12 125 83 105 0 \NUL
Register 0
19 263 225 322 206 0
updte0
19 258 353 317 334 0
updte0
19 268 490 327 471 0
updte0
20 449 70 508 51 0
reg0_3
20 468 207 527 188 0
reg0_2
20 472 335 531 316 0
reg0_1
20 461 472 520 453 0
reg0_0
19 258 70 317 51 0
keym3
19 263 207 322 188 0
keym2
19 259 335 318 316 0
keym1
19 268 472 327 453 0
keym0
5 307 282 356 233 0
5 301 412 350 363 0
5 311 556 360 507 0
5 317 151 366 102 0
20 461 496 520 477 0
inm0_0
20 473 360 532 341 0
inm0_1
20 470 234 529 215 0
inm0_2
20 450 94 509 75 0
inm0_3
22 548 99 771 79 0 \NUL
Uses the update logic from before
22 548 119 753 99 0 \NUL
to take the input from either the
22 548 139 787 119 0 \NUL
or the last ALU output and updates it
22 548 159 705 139 0 \NUL
to the specified register
22 548 199 767 179 0 \NUL
Each flip flop accounts for one bit
22 548 218 756 198 0 \NUL
of the input to be updated to the
22 548 238 698 218 0 \NUL
given register's output
22 553 292 768 272 0 \NUL
Each flip flop is hooked up to the
22 553 311 787 291 0 \NUL
clear button so that when the button
22 553 330 752 310 0 \NUL
is pressed, all of the registers
22 553 349 630 329 0 \NUL
are cleared
1 365 41 374 42
1 373 179 376 179
1 368 306 381 307
1 376 444 374 444
1 314 78 361 78
1 319 215 363 215
1 314 343 368 343
1 324 480 361 480
1 406 462 462 462
1 413 325 473 325
1 408 197 469 197
1 406 60 450 60
1 314 60 361 60
1 319 197 363 197
1 315 325 368 325
1 324 462 361 462
1 312 531 284 537
1 374 510 357 531
1 302 387 269 393
1 381 373 347 387
1 308 257 276 260
1 376 245 353 257
1 318 126 285 126
1 374 108 363 126
1 451 84 406 60
1 471 224 408 197
1 474 350 413 325
1 462 486 406 462
38 5
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 101 150 81 0 \NUL
CSE 12, Winter 2021
24 363 112 412 40 1 1 1
15 319 66 368 17
19 198 139 257 120 0
clear
24 367 249 416 177 1 1 1
15 327 204 376 155
19 194 281 253 262 0
clear
24 366 377 415 305 1 1 1
15 322 331 371 282
19 151 416 210 397 0
clear
24 370 514 419 442 1 1 1
15 330 469 379 420
19 154 543 213 524 0
clear
22 12 123 83 103 0 \NUL
Register 1
19 265 490 324 471 0
updte1
19 255 353 314 334 0
updte1
19 260 225 319 206 0
updte1
19 262 88 321 69 0
updte1
20 454 70 513 51 0
reg1_3
20 452 207 511 188 0
reg1_2
20 445 335 504 316 0
reg1_1
20 449 472 508 453 0
reg1_0
19 263 69 322 50 0
keym3
19 261 206 320 187 0
keym2
19 256 334 315 315 0
keym1
19 266 470 325 451 0
keym0
5 290 146 339 97 0
5 291 285 340 236 0
5 252 424 301 375 0
5 260 555 309 506 0
20 449 493 508 474 0
inm1_0
20 445 356 504 337 0
inm1_1
20 453 231 512 212 0
inm1_2
20 457 95 516 76 0
inm1_3
22 560 88 750 68 0 \NUL
Same as register 0, except it
22 560 107 694 87 0 \NUL
outputs to register 1
1 365 41 377 42
1 373 179 381 179
1 368 306 380 307
1 376 444 384 444
1 321 480 371 480
1 311 343 367 343
1 316 215 368 215
1 318 78 364 78
1 409 60 455 60
1 413 197 453 197
1 412 325 446 325
1 416 462 450 462
1 312 324 367 325
1 322 460 371 462
1 317 196 368 197
1 319 59 364 60
1 254 129 291 121
1 336 121 377 108
1 250 271 292 260
1 337 260 381 245
1 207 406 253 399
1 298 399 380 373
1 210 533 261 530
1 306 530 384 510
1 458 85 409 60
1 454 221 413 197
1 446 346 412 325
1 450 483 416 462
38 6
24 363 112 412 40 1 1 1
15 319 66 368 17
19 222 143 281 124 0
clear
24 367 249 416 177 1 1 1
15 327 204 376 155
19 203 272 262 253 0
clear
24 366 377 415 305 1 1 1
15 322 331 371 282
19 196 408 255 389 0
clear
24 370 514 419 442 1 1 1
15 330 469 379 420
19 196 539 255 520 0
clear
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
19 266 490 325 471 0
updte2
22 12 125 83 105 0 \NUL
Register 2
20 436 70 495 51 0
reg2_3
20 440 207 499 188 0
reg2_2
20 444 335 503 316 0
reg2_1
20 448 472 507 453 0
reg2_0
19 258 353 317 334 0
updte2
19 260 225 319 206 0
updte2
19 258 88 317 69 0
updte2
19 261 68 320 49 0
keym3
19 261 205 320 186 0
keym2
19 259 334 318 315 0
keym1
19 268 471 327 452 0
keym0
5 315 157 364 108 0
5 293 551 342 502 0
5 300 418 349 369 0
5 301 286 350 237 0
20 449 493 508 474 0
inm2_0
20 444 355 503 336 0
inm2_1
20 440 227 499 208 0
inm2_2
20 437 91 496 72 0
inm2_3
22 560 88 750 68 0 \NUL
Same as register 0, except it
22 560 107 694 87 0 \NUL
outputs to register 2
1 365 41 377 42
1 373 179 381 179
1 368 306 380 307
1 376 444 384 444
1 409 60 437 60
1 413 197 441 197
1 412 325 445 325
1 416 462 449 462
1 322 480 371 480
1 314 343 367 343
1 316 215 368 215
1 314 78 364 78
1 317 58 364 60
1 317 195 368 197
1 315 324 367 325
1 324 461 371 462
1 278 133 316 132
1 361 132 377 108
1 259 262 302 261
1 347 261 381 245
1 252 398 301 393
1 346 393 380 373
1 252 529 294 526
1 339 526 384 510
1 438 81 409 60
1 441 217 413 197
1 445 345 412 325
1 450 483 416 462
38 7
24 363 112 412 40 1 1 1
15 319 66 368 17
19 218 137 277 118 0
clear
24 367 249 416 177 1 1 1
15 327 204 376 155
19 221 278 280 259 0
clear
24 366 377 415 305 1 1 1
15 322 331 371 282
19 218 399 277 380 0
clear
24 370 514 419 442 1 1 1
15 330 469 379 420
19 222 540 281 521 0
clear
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
19 256 490 315 471 0
updte3
22 12 125 83 105 0 \NUL
Register 3
20 451 70 510 51 0
reg3_3
20 451 207 510 188 0
reg3_2
20 451 335 510 316 0
reg3_1
20 451 472 510 453 0
reg3_0
19 251 353 310 334 0
updte3
19 255 225 314 206 0
updte3
19 253 88 312 69 0
updte3
19 254 67 313 48 0
keym3
19 256 203 315 184 0
keym2
19 251 330 310 311 0
keym1
19 258 470 317 451 0
keym0
5 320 553 369 504 0
5 311 410 360 361 0
5 310 280 359 231 0
5 307 148 356 99 0
20 450 492 509 473 0
inm3_0
20 453 355 512 336 0
inm3_1
20 452 228 511 209 0
inm3_2
20 452 91 511 72 0
inm3_3
22 560 88 750 68 0 \NUL
Same as register 0, except it
22 560 107 694 87 0 \NUL
outputs to register 3
1 365 41 377 42
1 373 179 381 179
1 368 306 380 307
1 376 444 384 444
1 409 60 452 60
1 413 197 452 197
1 412 325 452 325
1 416 462 452 462
1 312 480 371 480
1 307 343 367 343
1 311 215 368 215
1 309 78 364 78
1 314 460 371 462
1 307 320 367 325
1 312 193 368 197
1 310 57 364 60
1 278 530 321 528
1 366 528 384 510
1 274 389 312 385
1 357 385 380 373
1 277 268 311 255
1 356 255 381 245
1 274 127 308 123
1 353 123 377 108
1 453 81 409 60
1 453 218 413 197
1 454 345 412 325
1 451 482 416 462
38 8
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
22 12 125 90 105 0 \NUL
ALU Input 1
31 435 122 484 37 0 1
31 434 383 483 298 0 1
31 436 253 485 168 0 1
31 419 497 468 412 0 1
19 227 501 286 482 0
inm0_0
19 227 482 286 463 0
inm1_0
19 227 463 286 444 0
inm2_0
19 226 444 285 425 0
inm3_0
19 225 368 284 349 0
inm0_1
19 224 347 283 328 0
inm1_1
19 222 326 281 307 0
inm2_1
19 243 304 302 285 0
inm3_1
19 236 238 295 219 0
inm0_2
19 238 217 297 198 0
inm1_2
19 235 193 294 174 0
inm2_2
19 254 168 313 149 0
inm3_2
19 259 124 318 105 0
inm0_3
19 256 98 315 79 0
inm1_3
19 256 75 315 56 0
inm2_3
19 273 49 332 30 0
inm3_3
19 310 516 369 497 0
adr1_1
19 330 539 389 520 0
adr1_0
19 351 254 410 235 0
adr1_1
19 356 277 415 258 0
adr1_0
19 321 384 380 365 0
adr1_1
19 327 404 386 385 0
adr1_0
19 353 124 412 105 0
adr1_1
19 358 147 417 128 0
adr1_0
20 534 86 593 67 0
in1_3
20 532 217 591 198 0
in1_2
20 527 347 586 328 0
in1_1
20 526 461 585 442 0
in1_0
14 380 174 429 125
14 381 425 430 376
14 384 305 433 256
14 364 573 413 524
22 19 178 183 158 0 \NUL
Each mux takes four bits
22 19 197 171 177 0 \NUL
from the output of each
22 19 216 204 196 0 \NUL
of the registers and decides
22 19 235 209 215 0 \NUL
based on the read address's
22 19 254 225 234 0 \NUL
binary value which input to use
1 436 64 329 39
1 436 70 312 65
1 436 76 312 88
1 436 82 315 114
1 435 325 299 294
1 435 331 278 316
1 435 337 280 337
1 435 343 281 358
1 437 195 310 158
1 437 201 291 183
1 437 207 294 207
1 437 213 292 228
1 420 439 282 434
1 420 445 283 453
1 420 451 283 472
1 420 457 283 491
1 436 106 414 137
1 436 100 409 114
1 435 361 377 374
1 435 367 383 394
1 437 231 407 244
1 437 237 412 267
1 420 481 386 529
1 420 475 366 506
1 535 76 481 76
1 527 451 465 451
1 420 493 410 548
1 437 249 430 280
1 435 379 427 400
1 436 118 426 149
1 533 207 482 207
1 528 337 480 337
38 9
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
22 12 125 90 105 0 \NUL
ALU Input 2
31 435 122 484 37 0 1
31 434 383 483 298 0 1
31 436 253 485 168 0 1
31 438 502 487 417 0 1
19 246 506 305 487 0
inm0_0
19 246 487 305 468 0
inm1_0
19 246 468 305 449 0
inm2_0
19 245 449 304 430 0
inm3_0
19 225 368 284 349 0
inm0_1
19 224 347 283 328 0
inm1_1
19 222 326 281 307 0
inm2_1
19 243 304 302 285 0
inm3_1
19 236 238 295 219 0
inm0_2
19 238 217 297 198 0
inm1_2
19 235 193 294 174 0
inm2_2
19 254 168 313 149 0
inm3_2
19 259 124 318 105 0
inm0_3
19 256 98 315 79 0
inm1_3
19 256 75 315 56 0
inm2_3
19 273 49 332 30 0
inm3_3
19 329 521 388 502 0
adr2_1
19 349 544 408 525 0
adr2_0
19 351 254 410 235 0
adr2_1
19 356 277 415 258 0
adr2_0
19 321 384 380 365 0
adr2_1
19 327 404 386 385 0
adr2_0
19 353 124 412 105 0
adr2_1
19 358 147 417 128 0
adr2_0
14 380 174 429 125
14 381 425 430 376
14 384 305 433 256
14 383 578 432 529
20 535 86 594 67 0
in2_3
20 535 217 594 198 0
in2_2
20 535 347 594 328 0
in2_1
20 535 466 594 447 0
in2_0
22 19 178 158 158 0 \NUL
Same as ALU input 1
22 19 197 175 177 0 \NUL
except that it uses read
22 19 216 168 196 0 \NUL
address 2 and outputs
22 19 235 113 215 0 \NUL
to ALU input 2
1 436 64 329 39
1 436 70 312 65
1 436 76 312 88
1 436 82 315 114
1 435 325 299 294
1 435 331 278 316
1 435 337 280 337
1 435 343 281 358
1 437 195 310 158
1 437 201 291 183
1 437 207 294 207
1 437 213 292 228
1 439 444 301 439
1 439 450 302 458
1 439 456 302 477
1 439 462 302 496
1 436 106 414 137
1 436 100 409 114
1 435 361 377 374
1 435 367 383 394
1 437 231 407 244
1 437 237 412 267
1 439 486 405 534
1 439 480 385 511
1 439 498 429 553
1 437 249 430 280
1 435 379 427 400
1 436 118 426 149
1 536 76 481 76
1 536 207 482 207
1 536 337 480 337
1 536 456 484 456
38 10
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
22 12 125 148 105 0 \NUL
ALU Outputs 1 and 2
20 642 368 701 349 0
alu_1
20 649 117 708 98 0
alu_0
31 440 159 489 74 0 1
19 208 85 267 66 0
in2_0
19 354 163 413 144 0
in1_1
19 362 193 421 174 0
in1_0
19 344 140 403 121 0
in2_0
5 268 128 317 79 0
19 196 113 255 94 0
in2_0
3 322 114 371 65 0 0
31 302 410 351 325 0 1
19 186 422 245 403 0
in1_1
19 198 445 257 426 0
in1_0
19 179 398 238 379 0
in2_1
19 177 374 236 355 0
in2_0
19 81 319 140 300 0
in2_1
5 141 362 190 313 0
19 69 347 128 328 0
in2_1
3 195 348 244 299 0 0
14 222 477 271 428
14 387 220 436 171
19 389 34 448 15 0
in2_0
5 449 77 498 28 0
19 377 62 436 43 0
in2_0
3 503 63 552 14 0 0
19 388 298 447 279 0
in2_0
5 448 341 497 292 0
19 376 326 435 307 0
in2_0
3 502 327 551 278 0 0
19 487 172 546 153 0
in1_3
19 493 193 552 174 0
in1_2
31 571 153 620 68 0 1
19 388 298 447 279 0
in2_1
5 448 341 497 292 0
19 376 326 435 307 0
in2_1
3 502 327 551 278 0 0
19 476 392 535 373 0
in1_3
19 478 413 537 394 0
in1_2
31 569 404 618 319 0 1
14 513 458 562 409
14 523 233 572 184
22 9 166 287 146 0 \NUL
There are two main parts to this ALU logic.
22 9 185 322 165 0 \NUL
The first decides if input 1 is either a 0, a 1, a 2,
22 9 204 308 184 0 \NUL
or a 3, and then the mux will output the value,
22 9 223 273 203 0 \NUL
either a 1 or 0, of a previous binary digit
22 9 242 288 222 0 \NUL
in input 2, which corresponds to how much
22 9 260 402 240 0 \NUL
the input 2's binary value is being shifted by input 1's value
22 367 500 675 480 0 \NUL
The second part uses the first two binary digits
22 367 519 665 499 0 \NUL
in input 1 to check that they are both 0, if they
22 367 538 674 518 0 \NUL
are not, then the left arithemetic shift is greater
22 367 557 690 537 0 \NUL
than 3, and since this is only a 4 bit value, a shift
22 367 576 773 556 0 \NUL
greater than 3 will always return 0 for all four bits of the output
1 418 183 441 143
1 410 153 441 137
1 252 103 269 103
1 314 103 323 103
1 264 75 323 75
1 242 412 303 388
1 254 435 303 394
1 235 388 303 370
1 400 130 441 119
1 368 89 441 113
1 368 89 441 107
1 368 89 441 101
1 233 364 303 364
1 125 337 142 337
1 187 337 196 337
1 137 309 196 309
1 241 323 303 352
1 241 323 303 358
1 433 195 441 155
1 268 452 303 406
1 433 52 450 52
1 495 52 504 52
1 445 24 504 24
1 432 316 449 316
1 494 316 503 316
1 444 288 503 288
1 543 162 572 131
1 549 183 572 137
1 486 113 572 113
1 549 38 572 95
1 549 38 572 101
1 549 38 572 107
1 532 382 570 382
1 534 403 570 388
1 548 302 570 346
1 548 302 570 352
1 617 107 650 107
1 615 358 643 358
1 348 364 570 364
1 548 302 570 358
1 559 433 570 400
1 569 208 572 149
38 11
19 323 372 382 353 0
in2_3
5 385 415 434 366 0
19 313 400 372 381 0
in2_3
3 439 401 488 352 0 0
19 414 460 473 441 0
in1_3
19 420 482 479 463 0
in1_2
31 514 463 563 378 0 1
19 349 165 408 146 0
in2_2
5 409 208 458 159 0
19 337 193 396 174 0
in2_2
3 463 194 512 145 0 0
19 438 268 497 249 0
in1_3
19 441 291 500 272 0
in1_2
31 544 264 593 179 0 1
19 174 255 233 236 0
in2_2
20 622 228 681 209 0
alu_2
31 272 270 321 185 0 1
19 174 234 233 215 0
in2_1
19 177 212 236 193 0
in2_0
19 92 159 151 140 0
in2_2
5 152 202 201 153 0
19 80 187 139 168 0
in2_2
3 206 188 255 139 0 0
19 165 285 224 266 0
in1_1
19 175 315 234 296 0
in1_0
14 218 340 267 291
19 132 461 191 442 0
in2_3
19 139 418 198 399 0
in2_1
20 614 427 673 408 0
alu_3
31 241 469 290 384 0 1
19 126 439 185 420 0
in2_2
19 161 395 220 376 0
in2_0
19 137 492 196 473 0
in1_1
19 158 518 217 499 0
in1_0
14 189 550 238 501
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
22 12 125 148 105 0 \NUL
ALU Outputs 2 and 3
14 462 514 511 465
14 482 327 531 278
22 422 70 703 50 0 \NUL
This logic, like most of the logic in this lab,
22 422 89 719 69 0 \NUL
is split into four separate sections to manage
22 422 108 561 88 0 \NUL
each bit of the output
1 369 390 386 390
1 431 390 440 390
1 379 362 440 362
1 470 450 515 441
1 476 472 515 447
1 485 376 515 405
1 485 376 515 411
1 393 183 410 183
1 455 183 464 183
1 405 155 464 155
1 494 258 545 242
1 497 281 545 248
1 509 169 545 206
1 509 169 545 212
1 230 245 273 230
1 230 224 273 224
1 233 202 273 218
1 136 177 153 177
1 198 177 207 177
1 252 163 273 212
1 221 275 273 248
1 231 305 273 254
1 264 315 273 266
1 188 451 242 429
1 182 429 242 423
1 195 408 242 417
1 217 385 242 411
1 193 482 242 447
1 214 508 242 453
1 235 525 242 465
1 148 149 207 149
1 508 489 515 459
1 560 417 615 417
1 485 376 515 417
1 287 423 515 423
1 545 260 528 302
1 509 169 545 218
1 318 224 545 224
1 590 218 623 218
38 12
19 325 338 384 319 0
kpad_1
19 321 212 380 193 0
kpad_2
19 318 99 377 80 0
kpad_3
19 323 468 382 449 0
kpad_0
31 422 242 471 157 0 2
19 324 236 383 217 0
sel
14 363 270 412 221
20 496 93 555 74 0
keym3
20 498 206 557 187 0
keym2
20 494 332 553 313 0
keym1
20 500 462 559 443 0
keym0
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 118 10 0 \NUL
O'Boyle, Devan
22 12 54 68 34 0 \NUL
doboyle
22 12 102 150 82 0 \NUL
CSE 12, Winter 2021
22 12 125 105 105 0 \NUL
Input Selector
31 422 368 471 283 0 2
19 324 362 383 343 0
sel
14 363 396 412 347
31 416 129 465 44 0 2
19 318 123 377 104 0
sel
14 357 157 406 108
31 421 498 470 413 0 2
19 323 492 382 473 0
sel
14 362 526 411 477
19 323 447 382 428 0
alu_0
19 324 317 383 298 0
alu_1
19 322 191 381 172 0
alu_2
19 319 77 378 58 0
alu_3
22 9 166 288 146 0 \NUL
This logic simply allows the user to switch
22 9 185 287 165 0 \NUL
between the input from the keypad and the
22 9 204 277 184 0 \NUL
input from the previous ALU output using
22 9 223 261 203 0 \NUL
the selector switch: 0 is keypad, and 1
22 9 242 267 222 0 \NUL
is ALU output. This input is then sent to
22 9 260 281 240 0 \NUL
one of the registers, where it can be used
22 9 279 203 259 0 \NUL
to perform left arithemtic shift
1 409 245 423 238
1 380 226 423 226
1 409 371 423 364
1 380 352 423 352
1 403 132 417 125
1 374 113 417 113
1 408 501 422 494
1 379 482 422 482
1 374 89 417 89
1 375 67 417 83
1 377 202 423 202
1 378 181 423 196
1 381 328 423 328
1 380 307 423 322
1 379 458 422 458
1 379 437 422 452
1 467 452 501 452
1 468 322 495 322
1 468 196 499 196
1 462 83 497 83
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
